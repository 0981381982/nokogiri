% require "common_prelude.rb"

resource_types:
<%= erbify_file "common_resource_types.yml" -%>
  - name: pull-request
    type: registry-image
    source:
      repository: jtarchie/pr


resources:
<%= erbify_file "common_resources.yml" -%>
  - name: nokogiri-pr
    type: pull-request
    icon: "github-circle"
    source:
      repo: sparklemotion/nokogiri
      access_token: {{github-repo-status-access-token}}
      ignore_paths: <%= $common_ignore_paths %>


anchors:
<%= erbify_file "common_anchors.yml" -%>
  notify_failure_to_pr: &notify_failure_to_pr
    put: nokogiri-pr
    params: {path: nokogiri-pr, status: failure}


jobs:
  - name: pr-pending
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: pending}


% Concourse.production_rubies.each do |ruby_version|
  - name: ruby-<%= ruby_version %>-system
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
% if ruby_version == Concourse.production_rubies.last
        passed: [pr-pending]
% else
        passed: ["ruby-<%= Concourse.production_rubies.last %>-system"]
% end
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
% if ruby_version == Concourse.production_rubies.last
            CC_TEST_REPORTER_ID: ((code_climate_reporter_id_nokogiri))
% end
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: ruby-<%= ruby_version %>-vendored
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["ruby-<%= ruby_version %>-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: ruby-<%= ruby_version %>-valgrind
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["ruby-<%= ruby_version %>-vendored"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }
% end


% RUBIES[:jruby].each_with_index do |jruby_version, j|
  - name: jruby-<%= jruby_version %>
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
% if j > 0
        passed: ["jruby-<%= RUBIES[:jruby][j-1] %>"]
% else
        passed: ["ruby-<%= Concourse.production_rubies.last %>-system"]
% end
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }
% end

  - name: gate-1
    public: true
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed:
% Concourse.production_rubies.each do |ruby_version|
          - "ruby-<%= ruby_version %>-valgrind"
% end
          - "jruby-<%= RUBIES[:jruby].last %>"


  - name: ruby-vanilla-system
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["gate-1"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: bionic}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: ruby-musl-system
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        passed: ["gate-1"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc


  - name: ruby-musl-valgrind
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        passed: ["ruby-musl-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc


  - name: ruby-libxmlruby-system
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["gate-1"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: ruby-libxmlruby-valgrind
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["ruby-libxmlruby-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: gate-2
    public: true
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed:
          - ruby-vanilla-system
          - ruby-libxmlruby-valgrind
          - ruby-musl-valgrind


  - name: gem-test
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["gate-2"]
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }
      - in_parallel:
        - task: install-and-test
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
            inputs:
              - name: ci
              - name: nokogiri-pr
                path: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
          on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }
        - task: install-and-test-on-musl
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
            inputs:
              - name: ci
              - name: nokogiri-pr
                path: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
          on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: gem-test-java
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["gate-2"]
      - task: gem-build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= RUBIES[:jruby].last %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build-java.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }
      - task: gem-install-and-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= RUBIES[:jruby].last %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        on_failure: { in_parallel: [*notify_failure_to_irc, *notify_failure_to_pr] }


  - name: pr-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed:
          - gem-test
          - gem-test-java
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: success}
      - put: nokogiri-irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}
