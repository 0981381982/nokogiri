% require "common_prelude.rb"

resource_types:
<%= erbify_file "common_resource_types.yml" -%>
  - name: pull-request
    type: docker-image
    source:
      repository: jtarchie/pr


resources:
<%= erbify_file "common_resources.yml" -%>
  - name: nokogiri-pr
    type: pull-request
    source:
      repo: sparklemotion/nokogiri
      access_token: {{github-repo-status-access-token}}
      ignore_paths:
        - CHANGELOG.md
        - concourse/**
        - suppressions/**


anchors:
<%= erbify_file "common_anchors.yml" -%>
  notify_failure_to_pr: &notify_failure_to_pr
    put: nokogiri-pr
    params: {path: nokogiri-pr, status: failure}


jobs:
  - name: pr-pending
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: pending}

% [Concourse.production_rubies.first, Concourse.production_rubies.last].each do |ruby_version|
  - name: ruby-<%= ruby_version %>-system-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: ruby-<%= ruby_version %>-vendored-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: ruby-<%= ruby_version %>-valgrind-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }
% end

% ruby_version = Concourse.production_rubies.last
  - name: ruby-vanilla-system-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["ruby-<%= ruby_version %>-system-pr"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: xenial}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
            TEST_WITH_APT_REPO_RUBY: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

% jruby_version = RUBIES[:jruby].last
  - name: jruby-<%= jruby_version %>-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: pr-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed:
          - ruby-<%= Concourse.production_rubies.first %>-system-pr
          - ruby-<%= Concourse.production_rubies.first %>-vendored-pr
          - ruby-<%= Concourse.production_rubies.first %>-valgrind-pr
          - ruby-<%= Concourse.production_rubies.last %>-system-pr
          - ruby-<%= Concourse.production_rubies.last %>-vendored-pr
          - ruby-<%= Concourse.production_rubies.last %>-valgrind-pr
          - ruby-vanilla-system-pr
          - jruby-<%= RUBIES[:jruby].last %>-pr
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: success}
      - put: nokogiri-irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}
