<%
def anchorify string
  string.tr '^a-zA-Z0-9', '_'
end
%>

groups:
  - name: master
    jobs:
      <% for ruby_version in RUBIES[:mri] %>
      - "ruby-<%= ruby_version %>-system"
      - "ruby-<%= ruby_version %>-vendored"
      - "ruby-<%= ruby_version %>-valgrind"
      - "ruby-<%= ruby_version %>-libxmlruby"
      - "ruby-<%= ruby_version %>-libxmlruby-valgrind"
      <% end %>
      <% for jruby_version in RUBIES[:jruby] %>
      - "jruby-<%= jruby_version %>"
      <% end %>
      <% for rbx_version in RUBIES[:rbx] %>
      - "rbx-<%= rbx_version %>"
      <% end %>
      - windows-devkit

  - name: PRs
    jobs:
      - pr-pending
      - ruby-<%= RUBIES[:mri].last %>-system-pr
      - ruby-<%= RUBIES[:mri].last %>-vendored-pr
      - ruby-<%= RUBIES[:mri].last %>-valgrind-pr
      - jruby-<%= RUBIES[:jruby].last %>-pr
      - rbx-<%= RUBIES[:rbx].last %>-pr
      - pr-success

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
  - name: nokogiri
    type: git
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      ignore_paths:
        - concourse/**
  - name: nokogiri-pr
    type: pull-request
    source:
      repo: sparklemotion/nokogiri
      access_token: {{github-repo-status-access-token}}
      ignore_paths:
        - concourse/**

jobs:
  <% for ruby_version in RUBIES[:mri] %>
  - name: ruby-<%= ruby_version %>-system
    public: true
    plan:
      - get: nokogiri
        trigger: true
      - task: rake-test
        config: &<%= anchorify "ruby-#{ruby_version}-system-rake-test-config" %>
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: ruby, tag: "<%= ruby_version %>"}
          inputs:
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh

  - name: ruby-<%= ruby_version %>-vendored
    public: true
    plan:
      - get: nokogiri
        trigger: true
      - task: rake-test
        config: &<%= anchorify "ruby-#{ruby_version}-vendored-rake-test-config" %>
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: ruby, tag: "<%= ruby_version %>"}
          inputs:
            - name: nokogiri
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh

  - name: ruby-<%= ruby_version %>-valgrind
    public: true
    plan:
      - get: nokogiri
        passed: ["ruby-<%= ruby_version %>-vendored"]
        trigger: true
      - task: rake-test
        config: &<%= anchorify "ruby-#{ruby_version}-valgrind-rake-test-config" %>
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: ruby, tag: "<%= ruby_version %>"}
          inputs:
            - name: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh

  - name: ruby-<%= ruby_version %>-libxmlruby
    public: true
    plan:
      - get: nokogiri
        passed: ["ruby-<%= ruby_version %>-vendored"]
        trigger: true
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: ruby, tag: "<%= ruby_version %>"}
          inputs:
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh

  - name: ruby-<%= ruby_version %>-libxmlruby-valgrind
    public: true
    plan:
      - get: nokogiri
        passed: ["ruby-<%= ruby_version %>-libxmlruby"]
        trigger: true
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: ruby, tag: "<%= ruby_version %>"}
          inputs:
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh
  <% end %>

  <% for jruby_version in RUBIES[:jruby] %>
  - name: jruby-<%= jruby_version %>
    public: true
    plan:
      - get: nokogiri
        trigger: true
      - task: rake-test
        config: &<%= anchorify "jruby-#{jruby_version}-rake-test-config" %>
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: jruby, tag: "<%= jruby_version %>-jdk"}
          inputs:
            - name: nokogiri
          params:
            JAVA_OPTS: "-Dfile.encoding=UTF8" # https://github.com/docker-library/openjdk/issues/32
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh
  <% end %>

  <% for rbx_version in RUBIES[:rbx] %>
  - name: rbx-<%= rbx_version %>
    public: true
    plan:
      - get: nokogiri
        trigger: true
      - task: rake-test
        config: &<%= anchorify "rbx-#{rbx_version}-rake-test-config" %>
          image_resource:
            type: docker-image
            source: {repository: rubinius/docker, tag: "<%= rbx_version %>"}
          platform: linux
          inputs:
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            dir: nokogiri
            path: concourse/tasks/rake-test/run.sh
  <% end %>

  - name: windows-devkit
    public: true
    plan:
      - get: nokogiri
        trigger: true
      - task: setup
        config:
          platform: windows
          inputs:
            - name: nokogiri
          run:
            dir: nokogiri
            path: powershell
            args:
              - "-ExecutionPolicy"
              - "Bypass"
              - "-File"
              - "concourse/windows/setup.ps1"
      - task: rake-test
        config:
          platform: windows
          inputs:
            - name: nokogiri
          run:
            dir: nokogiri
            path: powershell
            args:
              - "-ExecutionPolicy"
              - "Bypass"
              - "-File"
              - "concourse/windows/rake-test.ps1"

  - name: pr-pending
    public: true
    serial_groups: [pr]
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: pending}

  - name: ruby-<%= RUBIES[:mri].last %>-system-pr
    public: true
    serial_groups: [pr]
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          <<: *<%= anchorify "ruby-#{RUBIES[:mri].last}-system-rake-test-config" %>
        input_mapping: {nokogiri: nokogiri-pr}
        on_failure:
          put: nokogiri-pr
          params: {path: nokogiri-pr, status: failure}

  - name: ruby-<%= RUBIES[:mri].last %>-vendored-pr
    public: true
    serial_groups: [pr]
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          <<: *<%= anchorify "ruby-#{RUBIES[:mri].last}-vendored-rake-test-config" %>
        input_mapping: {nokogiri: nokogiri-pr}
        on_failure:
          put: nokogiri-pr
          params: {path: nokogiri-pr, status: failure}

  - name: ruby-<%= RUBIES[:mri].last %>-valgrind-pr
    public: true
    serial_groups: [pr]
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          <<: *<%= anchorify "ruby-#{ruby_version}-valgrind-rake-test-config" %>
        input_mapping: {nokogiri: nokogiri-pr}
        on_failure:
          put: nokogiri-pr
          params: {path: nokogiri-pr, status: failure}

  - name: jruby-<%= RUBIES[:jruby].last %>-pr
    public: true
    serial_groups: [pr]
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          <<: *<%= anchorify "jruby-#{RUBIES[:jruby].last}-rake-test-config" %>
        input_mapping: {nokogiri: nokogiri-pr}
        on_failure:
          put: nokogiri-pr
          params: {path: nokogiri-pr, status: failure}

  - name: rbx-<%= RUBIES[:rbx].last %>-pr
    public: true
    serial_groups: [pr]
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          <<: *<%= anchorify "rbx-#{RUBIES[:rbx].last}-rake-test-config" %>
        input_mapping: {nokogiri: nokogiri-pr}
        on_failure:
          put: nokogiri-pr
          params: {path: nokogiri-pr, status: failure}

  - name: pr-success
    public: true
    serial_groups: [pr]
    disable_manual_trigger: true
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed:
          - ruby-<%= RUBIES[:mri].last %>-system-pr
          - ruby-<%= RUBIES[:mri].last %>-vendored-pr
          - ruby-<%= RUBIES[:mri].last %>-valgrind-pr
          - jruby-<%= RUBIES[:jruby].last %>-pr
          - rbx-<%= RUBIES[:rbx].last %>-pr
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: success}
