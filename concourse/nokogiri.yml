resource_types:
  - name: irc-notification
    type: docker-image
    source:
      repository: flavorjones/irc-notification-resource

resources:
  - name: ci
    type: git
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      disable_ci_skip: true # always get the latest pipeline configuration
  - name: nokogiri
    type: git
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      ignore_paths:
        - CHANGELOG.md
        - concourse/**
        - suppressions/**
  - name: nokogiri-irc
    type: irc-notification
    source:
      server: chat.freenode.net
      port: 7070
      channel: "#nokogiri"
      user: {{nokobot-irc-username}}
      password: {{nokobot-irc-password}}

anchors:
  notify_failure_to_irc: &notify_failure_to_irc
    put: nokogiri-irc
    params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build failed ($BUILD_URL)"}

jobs:
  <% RUBIES[:mri].each do |ruby_version| %>
  - name: ruby-<%= ruby_version %>-system
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
% if Concourse.production_rubies.include? ruby_version
        on_failure: *notify_failure_to_irc
% end

  - name: ruby-<%= ruby_version %>-vendored
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-<%= ruby_version %>-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
% if Concourse.production_rubies.include? ruby_version
        on_failure: *notify_failure_to_irc
% end

  - name: ruby-<%= ruby_version %>-valgrind
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-<%= ruby_version %>-vendored"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
% if Concourse.production_rubies.include? ruby_version
        on_failure: *notify_failure_to_irc
% end
  <% end %>

% ruby_version = Concourse.production_rubies.last
  - name: ruby-vanilla-system
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-<%= ruby_version %>-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: xenial}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
            TEST_WITH_APT_REPO_RUBY: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc

  - name: ruby-libxmlruby-system
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc

  - name: ruby-libxmlruby-vendored
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-libxmlruby-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc

  - name: ruby-libxmlruby-valgrind
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-libxmlruby-vendored"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc

  <% for jruby_version in RUBIES[:jruby] %>
  - name: jruby-<%= jruby_version %>
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: *notify_failure_to_irc
  <% end %>

  - name: build-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri
        trigger: true
        version: every
        passed:
          <% Concourse.production_rubies.each do |ruby_version| %>
          - "ruby-<%= ruby_version %>-valgrind"
          <% end %>
          <% Concourse.production_rubies.last(1).each do |ruby_version| %>
          - "ruby-libxmlruby-valgrind"
          <% end %>
          <% for jruby_version in RUBIES[:jruby] %>
          - "jruby-<%= jruby_version %>"
          <% end %>
      - put: nokogiri-irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}

% ruby_version = RUBIES[:mri].last
  - name: gem-test
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: [build-success]
      - task: gem-build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - task: gem-install-and-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-install-and-test.sh

% jruby_version = RUBIES[:jruby].last
  - name: gem-test-java
    public: true
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: [build-success]
      - task: gem-build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build-java.sh
      - task: gem-install-and-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
