% require "common_prelude.rb"

resource_types:
<%= erbify_file "common_resource_types.yml" -%>


resources:
<%= erbify_file "common_resources.yml" -%>
  - name: nokogiri
    type: git
    icon: "github-circle"
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      ignore_paths: <%= $common_ignore_paths %>


anchors:
<%= erbify_file "common_anchors.yml" -%>


jobs:
% RUBIES[:mri].each do |ruby_version|
  - name: ruby-<%= ruby_version %>-system
    public: true
% if Concourse.production_rubies.include? ruby_version
    on_failure: *notify_failure_to_irc
% end
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
% if ruby_version == Concourse.production_rubies.last
            CC_TEST_REPORTER_ID: ((code_climate_reporter_id_nokogiri))
            GIT_BRANCH: master
% end
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: ruby-<%= ruby_version %>-vendored
    public: true
% if Concourse.production_rubies.include? ruby_version
    on_failure: *notify_failure_to_irc
% end
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-<%= ruby_version %>-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: ruby-<%= ruby_version %>-valgrind
    public: true
% if Concourse.production_rubies.include? ruby_version
    on_failure: *notify_failure_to_irc
% end
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-<%= ruby_version %>-vendored"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
% end


% RUBIES[:jruby].each_with_index do |jruby_version, j|
  - name: jruby-<%= jruby_version %>
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
% if j > 0
        passed: ["jruby-<%= RUBIES[:jruby][j-1] %>"]
% end
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= jruby_version %>"}
          inputs:
            - name: ci
            - name: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
% end


  - name: gate-1
    public: true
    plan:
      - get: nokogiri
        trigger: true
        passed:
% Concourse.production_rubies.each do |ruby_version|
          - "ruby-<%= ruby_version %>-valgrind"
% end
          - "jruby-<%= RUBIES[:jruby].last %>"


  - name: ruby-vanilla-system
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["gate-1"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: bionic}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: ruby-musl-system
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["gate-1"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: ruby-musl-valgrind
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-musl-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: ruby-libxmlruby-system
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["gate-1"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: ruby-libxmlruby-valgrind
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["ruby-libxmlruby-system"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
          inputs:
            - name: ci
            - name: nokogiri
          params:
            BUNDLE_GEMFILE: "Gemfile-libxml-ruby"
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh


  - name: gate-2
    public: true
    plan:
      - get: nokogiri
        trigger: true
        passed:
          - ruby-vanilla-system
          - ruby-libxmlruby-valgrind
          - ruby-musl-valgrind


  - name: gem-test
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["gate-2"]
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-mri-x86_64-linux", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
        - task: install-and-test
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= Concourse.production_rubies.last %>"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
        - task: install-and-test-on-musl
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: native-gem-test
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        version: every
        passed: ["gate-2"]
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-mri-x86_64-linux", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          params:
            BUILD_NATIVE_GEM: t
          run:
            path: ci/concourse/tasks/gem-test/gem-build.sh
      - in_parallel:
% $native_ruby_versions.each do |ruby_version|
        - task: install-and-test-<%= ruby_version %>
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "mri-<%= ruby_version %>"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh
% end
        - task: install-and-test-on-musl
          config:
            platform: linux
            image_resource:
              type: registry-image
              source: {repository: "flavorjones/nokogiri-test", tag: "alpine"}
            inputs:
              - name: ci
              - name: nokogiri
              - name: gems
            run:
              path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: gem-test-java
    public: true
    on_failure: *notify_failure_to_irc
    plan:
      - get: ci
      - get: nokogiri
        trigger: true
        passed: ["gate-2"]
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "larskanis/rake-compiler-dock-jruby", tag: "<%= RakeCompilerDock::IMAGE_VERSION %>"}
          inputs:
            - name: ci
            - name: nokogiri
          outputs:
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-build-java.sh
      - task: install-and-test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-<%= RUBIES[:jruby].last %>"}
          inputs:
            - name: ci
            - name: nokogiri
            - name: gems
          run:
            path: ci/concourse/tasks/gem-test/gem-install-and-test.sh


  - name: build-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri
        trigger: true
        version: every
        passed:
          - gem-test
          - gem-test-java
      - put: nokogiri-irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}
