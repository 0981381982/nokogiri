resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: jtarchie/pr
  - name: irc-notification
    type: docker-image
    source:
      repository: flavorjones/irc-notification-resource


resources:
  - name: ci
    type: git
    source:
      uri: https://github.com/sparklemotion/nokogiri/
      branch: master
      disable_ci_skip: true # always get the latest pipeline configuration
  - name: nokogiri-pr
    type: pull-request
    source:
      repo: sparklemotion/nokogiri
      access_token: {{github-repo-status-access-token}}
      ignore_paths:
        - CHANGELOG.md
        - concourse/**
        - suppressions/**
  - name: nokogiri-irc
    type: irc-notification
    source:
      server: chat.freenode.net
      port: 7070
      channel: "#nokogiri"
      user: {{nokobot-irc-username}}
      password: {{nokobot-irc-password}}


anchors:
  notify_failure_to_irc: &notify_failure_to_irc
    put: nokogiri-irc
    params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build failed ($BUILD_URL)"}
  notify_failure_to_pr: &notify_failure_to_pr
    put: nokogiri-pr
    params: {path: nokogiri-pr, status: failure}


jobs:
  - name: pr-pending
    public: true
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: pending}

  
  - name: ruby-2.3-system-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-2.3"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: ruby-2.3-vendored-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-2.3"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: ruby-2.3-valgrind-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-2.3"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }
  
  - name: ruby-2.6-system-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-2.6"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: ruby-2.6-vendored-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-2.6"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: ruby-2.6-valgrind-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "mri-2.6"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            TEST_WITH_VALGRIND: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }
  

  - name: ruby-vanilla-system-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: ["ruby-2.6-system-pr"]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: xenial}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          params:
            NOKOGIRI_USE_SYSTEM_LIBRARIES: t
            TEST_WITH_APT_REPO_RUBY: t
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: jruby-9.2-pr
    public: true
    max_in_flight: 1
    plan:
      - get: ci
      - get: nokogiri-pr
        trigger: true
        version: every
        passed: [pr-pending]
      - task: rake-test
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: "flavorjones/nokogiri-test", tag: "jruby-9.2"}
          inputs:
            - name: ci
            - name: nokogiri-pr
              path: nokogiri
          run:
            path: ci/concourse/tasks/rake-test/run.sh
        on_failure: { aggregate: [*notify_failure_to_irc, *notify_failure_to_pr] }

  - name: pr-success
    public: true
    disable_manual_trigger: true
    plan:
      - get: nokogiri-pr
        trigger: true
        version: every
        passed:
          - ruby-2.3-system-pr
          - ruby-2.3-vendored-pr
          - ruby-2.3-valgrind-pr
          - ruby-2.6-system-pr
          - ruby-2.6-vendored-pr
          - ruby-2.6-valgrind-pr
          - ruby-vanilla-system-pr
          - jruby-9.2-pr
      - put: nokogiri-pr
        params: {path: nokogiri-pr, status: success}
      - put: nokogiri-irc
        params: {message: "($BUILD_PIPELINE_NAME/$BUILD_JOB_NAME) The build passed ($BUILD_URL)"}
